apiVersion: batch/v1
kind: Job
metadata:
  name: restore-paperless-db
  namespace: infra
spec:
  template:
    metadata:
      namespace: infra
    spec:
      containers:
        - image: bitnami/postgresql
          imagePullPolicy: IfNotPresent
          name: postgres
          command:
            - "/bin/bash"
            - "-c"
            - "echo \"SELECT 'CREATE ROLE $DB_USER LOGIN PASSWORD ''$DB_PASS'';' WHERE NOT EXISTS (SELECT FROM pg_catalog.pg_roles WHERE rolname = '$DB_USER')\\gexec\" | psql -h $DB_HOST -U postgres && psql -h $DB_HOST -U postgres -f /longhorn/paperless_full_dump.sql"
          env:
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: pg-paperless-creds
                  key: db-host
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: pg-paperless-creds
                  key: db-user
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: pg-paperless-creds
                  key: db-pass
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: pg-creds
                  key: postgres-password
          volumeMounts:
            - mountPath: /longhorn
              name: longhorn
              readOnly: true
      restartPolicy: Never
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
        allowPrivilegeEscalation: true
      volumes:
        - name: longhorn
          persistentVolumeClaim:
            claimName: scripts-longhorn
  backoffLimit: 3